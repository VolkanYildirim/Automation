<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DAAAAABJRU5ErkJggg==
</value>
  </data>
</root>